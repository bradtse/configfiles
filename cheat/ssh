# Create an ssh tunnel to another remote host
# Now all traffic on the current machine that uses port 2222
# will be forwarded to example.com, and then forwarded to google.com on port 80
ssh -L 2222:google.com:80 user@example.com

# Same as above, except this time the traffic will just be sent to port 35000
# on the remote machine
ssh -L 2222:localhost:3500 user@example.com

# To ssh via pem file (which normally needs 0600 permissions):
ssh -i /path/to/file.pem user@example.com

# To connect on an non-standard port:
ssh -p 2222 user@example.com

# To execute a command on a remote server:
ssh -t user@example.com 'the-remote-command'

# To tunnel an x session over SSH:
ssh -X user@example.com

# To launch a specific x application over SSH:
ssh -X -t user@example.com 'chromium-browser'

# To create a SOCKS proxy on localhost and port 9999
ssh -D 9999 user@example.com

# -X use an xsession, -C compress data, "-c blowfish" use the encryption blowfish
ssh user@example.com -C -c blowfish -X

# For more information, see:
# http://unix.stackexchange.com/q/12755/44856
